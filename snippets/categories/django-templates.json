{
    "django_block": {
        "prefix": "adblock",
        "body": [
            "{% block ${1:content} %}",
            "\t${0}",
            "{% endblock %}"
        ],
        "description": "Django template block",
        "scope": "text.html.django"
    },
    "django_static": {
        "prefix": "adstatic",
        "body": "{% static '${1:path/to/file}' %}",
        "description": "Django static file reference",
        "scope": "text.html.django"
    },
    "django_forloop": {
        "prefix": "adfor",
        "body": [
            "{% for ${1:item} in ${2:list} %}",
            "\t${0}",
            "{% endfor %}"
        ],
        "description": "Django for loop template tag",
        "scope": "text.html.django"
    },
    "django_if": {
        "prefix": "adif",
        "body": [
            "{% if ${1:condition} %}",
            "\t${2}",
            "{% else %}",
            "\t${3}",
            "{% endif %}"
        ],
        "description": "Django if-else template tag",
        "scope": "text.html.django"
    },
    "django_include": {
        "prefix": "adinclude",
        "body": "{% include '${1:template_name.html}' %}",
        "description": "Django include template tag",
        "scope": "text.html.django"
    },
    "django_url": {
        "prefix": "adurl",
        "body": "{% url '${1:url_name}' %}",
        "description": "Django URL template tag",
        "scope": "text.html.django"
    },
    "django_extends": {
        "prefix": "adextends",
        "body": "{% extends '${1:base.html}' %}",
        "description": "Django extends template tag",
        "scope": "text.html.django"
    },
    "django_csrf": {
        "prefix": "adcsrf",
        "body": "{% csrf_token %}",
        "description": "Django CSRF token tag",
        "scope": "text.html.django"
    },
    "django_load": {
        "prefix": "adload",
        "body": "{% load ${1:static} %}",
        "description": "Django load template tag",
        "scope": "text.html.django"
    },
    "django_comment": {
        "prefix": "adcomment",
        "body": "{% comment %}${1:comment text}{% endcomment %}",
        "description": "Django comment tag",
        "scope": "text.html.django"
    },
    "django_with": {
        "prefix": "adwith",
        "body": [
            "{% with ${1:variable}=${2:value} %}",
            "\t${3:content}",
            "{% endwith %}"
        ],
        "description": "Django with template tag",
        "scope": "text.html.django"
    },
    "django_filter": {
        "prefix": "adfilter",
        "body": "{{ ${1:variable}|${2:filter}:${3:parameter} }}",
        "description": "Django filter syntax",
        "scope": "text.html.django"
    },
    "django_python_view": {
        "prefix": "adpview",
        "body": [
            "from django.shortcuts import render, HttpResponse",
            "from django.views.generic import ${1:TemplateView}",
            "",
            "def ${2:view_name}(request):",
            "\treturn render(request, '${3:template.html}', {",
            "\t\t'${4:context_variable}': ${5:value}",
            "\t})"
        ],
        "description": "Django view function",
        "scope": "python"
    },
    "django_python_model": {
        "prefix": "adpmodel",
        "body": [
            "from django.db import models",
            "",
            "class ${1:ModelName}(models.Model):",
            "\t${2:field_name} = models.${3:CharField}(${4:max_length=100})",
            "",
            "\tdef __str__(self):",
            "\t\treturn self.${2:field_name}",
            "",
            "\tclass Meta:",
            "\t\tverbose_name = '${5:Model Name}'",
            "\t\tverbose_name_plural = '${6:Model Names}'"
        ],
        "description": "Django model class",
        "scope": "python"
    },
    "django_python_form": {
        "prefix": "adpform",
        "body": [
            "from django import forms",
            "from .models import ${1:ModelName}",
            "",
            "class ${2:FormName}(forms.${3:ModelForm}):",
            "\tclass Meta:",
            "\t\tmodel = ${1:ModelName}",
            "\t\tfields = ['${4:field1}', '${5:field2}']",
            "\t\twidgets = {",
            "\t\t\t'${4:field1}': forms.${6:TextInput}(attrs={'class': 'form-control'})",
            "\t\t}"
        ],
        "description": "Django form class",
        "scope": "python"
    },
    "django_python_admin": {
        "prefix": "adpadmin",
        "body": [
            "from django.contrib import admin",
            "from .models import ${1:ModelName}",
            "",
            "@admin.register(${1:ModelName})",
            "class ${1:ModelName}Admin(admin.ModelAdmin):",
            "\tlist_display = ('${2:field1}', '${3:field2}')",
            "\tlist_filter = ('${4:field1}',)",
            "\tsearch_fields = ('${5:field1}',)"
        ],
        "description": "Django admin class",
        "scope": "python"
    },
    "django_python_urls": {
        "prefix": "adpurls",
        "body": [
            "from django.urls import path",
            "from . import views",
            "",
            "app_name = '${1:app_name}'",
            "",
            "urlpatterns = [",
            "\tpath('${2:path}/', views.${3:view_name}, name='${4:url_name}'),",
            "]"
        ],
        "description": "Django URLs configuration",
        "scope": "python"
    }
} 